options:
  fsid:
    type: string
    default:
    description: |
      fsid of the ceph cluster. To generate a suitable value use `uuid`
      .
      This configuration element is mandatory and the service will fail on
      install if it is not provided.
  auth-supported:
    type: string
    default: cephx
    description: |
      Which authentication flavour to use.
      .
      Valid options are "cephx" and "none".  If "none" is specified,
      keys will still be created and deployed so that it can be
      enabled later.
  monitor-secret:
    type: string
    default:
    description: |
      This value will become the mon. key. To generate a suitable value use:
      .
        ceph-authtool /dev/stdout --name=mon. --gen-key
      .
      This configuration element is mandatory and the service will fail on
      install if it is not provided.
  monitor-count:
    type: int
    default: 3
    description: |
      How many nodes to wait for before trying to create the monitor cluster
      this number needs to be odd, and more than three is a waste except for
      very large clusters.
  osd-devices:
    type: string
    default: /dev/vdb
    description: |
      The devices to format and set up as osd volumes.
      .
      These devices are the range of devices that will be checked for and
      used across all service units.
      .
      For ceph >= 0.56.6 these can also be directories instead of devices - the
      charm assumes anything not starting with /dev is a directory instead.
  osd-journal:
    type: string
    default:
    description: |
      The device to use as a shared journal drive for all OSD's.  By default
      no journal device will be used.
      .
      Only supported with ceph >= 0.48.3.
  osd-journal-size:
    type: int
    default: 1024
    description: |
      Ceph osd journal size. The journal size should be at least twice the
      product of the expected drive speed multiplied by filestore max sync
      interval. However, the most common practice is to partition the journal
      drive (often an SSD), and mount it such that Ceph uses the entire
      partition for the journal.
      .
      Only supported with ceph >= 0.48.3.
  osd-format:
    type: string
    default: xfs
    description: |
      Format of filesystem to use for OSD devices; supported formats include:
      .
        xfs (Default >= 0.48.3)
        ext4 (Only option < 0.48.3)
        btrfs (experimental and not recommended)
      .
      Only supported with ceph >= 0.48.3.
  osd-reformat:
    type: string
    default:
    description: |
      By default, the charm will not re-format a device that already looks
      as if it might be an OSD device.  This is a safeguard to try to
      prevent data loss.
      .
      Specifying this option (any value) forces a reformat of any OSD devices
      found which are not already mounted.
  ignore-device-errors:
    type: boolean
    default: False
    description: |
      By default, the charm will raise errors if a whitelisted device is found,
      but for some reason the charm is unable to initialize the device for use
      by Ceph.
      .
      Setting this option to 'True' will result in the charm classifying such
      problems as warnings only and will not result in a hook error.
  ephemeral-unmount:
    type: string
    default:
    description: |
      Cloud instances provider ephermeral storage which is normally mounted
      on /mnt.
      .
      Providing this option will force an unmount of the ephemeral device
      so that it can be used as a OSD storage device.  This is useful for
      testing purposes (cloud deployment is not a typical use case).
  source:
    type: string
    default:
    description: |
      Optional configuration to support use of additional sources such as:
      .
        - ppa:myteam/ppa
        - cloud:precise-proposed/icehouse
        - http://my.archive.com/ubuntu main
      .
      The last option should be used in conjunction with the key configuration
      option.
      .
      Note that a minimum ceph version of 0.48.2 is required for use with this
      charm which is NOT provided by the packages in the main Ubuntu archive
      for precise but is provided in the Folsom cloud archive.
  key:
    type: string
    default:
    description: |
      Key ID to import to the apt keyring to support use with arbitary source
      configuration from outside of Launchpad archives or PPA's.
  use-syslog:
    type: boolean
    default: False
    description: |
      If set to True, supporting services will log to syslog.
  ceph-public-network:
    type: string
    default:
    description: |
      The IP address and netmask of the public (front-side) network (e.g.,
      192.168.0.0/24)
  ceph-cluster-network:
    type: string
    default:
    description: |
      The IP address and netmask of the cluster (back-side) network (e.g.,
      192.168.0.0/24)
  prefer-ipv6:
    type: boolean
    default: False
    description: |
      If True enables IPv6 support. The charm will expect network interfaces
      to be configured with an IPv6 address. If set to False (default) IPv4
      is expected.
      .
      NOTE: these charms do not currently support IPv6 privacy extension. In
      order for this charm to function correctly, the privacy extension must be
      disabled and a non-temporary address must be configured/available on
      your network interface.
  sysctl:
    type: string
    default: '{ kernel.pid_max : 2097152 }'
    description: |
      YAML-formatted associative array of sysctl key/value pairs to be set
      persistently. As a default we set pid_max to a high value to avoid
      problems with large numbers (>20) of OSDs recovering. very large clusters
      should set this value even higher (max 4194303).
  nagios_context:
    default: "juju"
    type: string
    description: |
      Used by the nrpe-external-master subordinate charm.
      A string that will be prepended to instance name to set the host name
      in nagios. So for instance the hostname would be something like:
          juju-myservice-0
      If you're running multiple environments with the same services in them
      this allows you to differentiate between them.
